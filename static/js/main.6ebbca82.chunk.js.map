{"version":3,"sources":["api.js","components/SearchBar.js","components/Avatar.js","components/UserInfo.js","components/UserList.js","App.js","serviceWorker.js","index.js"],"names":["MAX_PAGES","Math","ceil","getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","searchText","currentPage","url","res","_res$data","total_count","items","pageCount","wrap","_context","prev","next","concat","axios","get","sent","data","abrupt","stop","_x","_x2","apply","this","arguments","SearchBar","onSearch","loading","inputRef","useRef","react_default","createElement","className","onSubmit","e","preventDefault","val","current","value","type","aria-label","autoCapitalize","autoComplete","autoCorrect","autoFocus","disabled","placeholder","ref","Avatar","link","altText","href","target","rel","src","alt","width","UserInfo","user","_useState","useState","_useState2","slicedToArray","info","setInfo","_useContext","useContext","AppContext","dispatch","rateLimitExceeded","useEffect","then","catch","response","status","headers","parseInt","countdown","Date","now","console","debug","toFixed","Actions","RateLimitExceeded","payload","title","login","html_url","Fragment","name","bio","location","viewBox","version","height","aria-hidden","fillRule","d","email","UserList","users","map","key","id","src_components_Avatar","avatar_url","src_components_UserInfo","SetIsLoading","SetResults","FailedUserFetch","SetPage","reducer","state","objectSpread","isLoading","error","failedToLoadMsg","total","createContext","App","_useReducer","useReducer","_useReducer2","exceededUsersLimit","goToPage","_ref2","page","t0","_ref3","_callee2","text","_context2","replace","Provider","src_components_SearchBar","undefined","startNum","length","getResultHeadline","src_components_UserList","dist_default","activeClassName","activeLinkClassName","containerClassName","pageRangeDisplayed","marginPagesDisplayed","onPageChange","_ref4","selected","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6ebbca82.chunk.js","sourcesContent":["import axios from 'axios';\n\n// These are public GitHub API restrictions\nexport const USERS_API_LIMIT = 1000;\nexport const PER_PAGE = 30;\nconst MAX_PAGES = Math.ceil(USERS_API_LIMIT / PER_PAGE);\n\nexport const getUsers = async (searchText, currentPage) => {\n  let url = `https://api.github.com/search/users?q=${searchText}`;\n  if (currentPage && currentPage > 1) {\n    url += `&page=${currentPage}`;\n  }\n  let res = await axios.get(url);\n  if (res && res.data) {\n    let { total_count, items } = res.data;\n\n    // If the total count is > the limit, set pageCount to the max number of pages,\n    // otherwise, calculate it\n    let pageCount = 1;\n    if (total_count > PER_PAGE) {\n      pageCount = total_count > USERS_API_LIMIT ? MAX_PAGES : Math.ceil(total_count / PER_PAGE);\n    }\n\n    return {\n      pageCount,\n      currentPage,\n      total_count,\n      items\n    };\n  }\n  else {\n    return null;\n  }\n};","import React, { useRef } from 'react';\nimport './SearchBar.css';\n\nconst SearchBar = ({ onSearch, loading }) => {\n  const inputRef = useRef(null);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let val = inputRef.current.value;\n    if (val) {\n      onSearch(val);\n    }\n  };\n\n  return (\n    <form\n      className=\"search-wrapper\"\n      onSubmit={onSubmit}>\n      <input\n        type=\"search\"\n        aria-label=\"Search Github Users\"\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        autoFocus\n        className=\"user-search\"\n        disabled={loading}\n        placeholder=\"Search Github Users\"\n        ref={inputRef} />\n      <button className=\"btn search-btn\"\n        disabled={loading}\n        type=\"submit\">\n        Search\n      </button>\n    </form>\n  )\n};\n\nexport default SearchBar;","import React from 'react';\nimport './Avatar.css';\n\nconst Avatar = ({ url, link, altText }) => (\n  <a\n    className=\"avatar-wrapper\"\n    href={link}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\">\n    <img\n      className=\"avatar\"\n      src={url}\n      alt={altText}\n      width={50}\n    />\n  </a>\n);\n\nexport default Avatar;","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './UserInfo.css';\nimport { Actions, AppContext } from '../App';\n\nconst UserInfo = ({ user }) => {\n  const [info, setInfo] = useState(null);\n  const { dispatch, rateLimitExceeded } = useContext(AppContext);\n\n  /**\n   * Get the detailed information from the API about this user\n   * Note, because this is a demo app and we aren't using any authentication,\n   * after a few page reloads, we'll start getting 403's because we exceed the rate limit.\n   * When that happens, we'll stop bothering with making those requests, and\n   * fall back to only showing avatars and usernames\n   */\n  useEffect(() => {\n    if (user && !rateLimitExceeded) {\n      axios.get(user.url)\n        .then(res => setInfo(res.data))\n        .catch(e => {\n          if (e.response.status === 403) {\n            // Let's check the headers to see if we've exceeded the rate limit\n            const { headers } = e.response;\n            const remaining = parseInt(headers['x-ratelimit-remaining']);\n            if (remaining === 0) {\n              // Yup! We exceeded the limit\n              if (headers['x-ratelimit-reset']) {\n                const resetTime = parseInt(headers['x-ratelimit-reset']) * 1000;\n                const countdown = resetTime - Date.now();\n                console.debug(\n                  `%c[RATE_LIMIT] Oops, made too many API calls. We'll have to wait another ${(countdown / 60000).toFixed(1)} minutes before trying again`,\n                  'color: magenta;'\n                );\n                dispatch({ type: Actions.RateLimitExceeded, payload: true });\n              }\n            }\n          }\n        });\n    }\n  }, [user, rateLimitExceeded, dispatch]);\n\n  return (\n    <div className={`user-info ${rateLimitExceeded ? 'show-less' : ''}`}>\n      <h4 className=\"flex user-title-block\">\n        <span className=\"username\" title={user.login}>\n          <a className=\"user-link\" href={user.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{user.login}</a>\n        </span>\n        {\n          info &&\n          <>\n            <span className=\"user-desc\" title={info.name}>{info.name}</span>\n          </>\n        }\n      </h4>\n      {\n        info && info.bio &&\n        <p className=\"user-bio\">\n          <span>{info.bio}</span>\n        </p>\n      }\n      {\n        info &&\n        <div className=\"flex user-extra-info\">\n          {\n            info.location &&\n            <div className=\"flex user-location\">\n              {/* SVG Taken from GitHub's markup */}\n              <svg className=\"octicon octicon-location\" viewBox=\"0 0 12 16\" version=\"1.1\"\n                width=\"12\" height=\"16\" aria-hidden=\"true\">\n                <path fillRule=\"evenodd\"\n                  d=\"M6 0C2.69 0 0 2.5 0 5.5 0 10.02 6 16 6 16s6-5.98 6-10.5C12 2.5 9.31\n                    0 6 0zm0 14.55C4.14 12.52 1 8.44 1 5.5 1 3.02 3.25 1 6 1c1.34 0 2.61.48\n                    3.56 1.36.92.86 1.44 1.97 1.44 3.14 0 2.94-3.14 7.02-5 9.05zM8 5.5c0\n                    1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z\"\n                ></path>\n              </svg>\n              <span>{info.location}</span>\n            </div>\n          }\n          {\n            info.email &&\n            <div className=\"flex\">\n              {/* SVG Taken from GitHub's markup */}\n              <svg className=\"octicon octicon-mail\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\"\n                height=\"16\" aria-hidden=\"true\">\n                <path fillRule=\"evenodd\" d=\"M0 4v8c0 .55.45 1 1 1h12c.55 0\n                  1-.45 1-1V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1zm13 0L7 9 1 4h12zM1 5.5l4\n                  3-4 3v-6zM2 12l3.5-3L7 10.5 8.5 9l3.5 3H2zm11-.5l-4-3 4-3v6z\"></path>\n              </svg>\n              <span>{info.email}</span>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  )\n};\n\nexport default UserInfo;","import React from 'react';\nimport './UserList.css';\nimport Avatar from './Avatar';\nimport UserInfo from './UserInfo';\n\nconst UserList = ({ users }) => {\n  return (\n    <div className=\"list-wrapper\">\n      <ul className=\"user-list\">\n        {\n          users.map(user => (\n            <li\n              key={user.id}\n              className=\"user-list-item\"\n            >\n              <Avatar\n                url={user.avatar_url + '&size=50'}\n                link={user.html_url}\n                altText={user.login}\n                title={user.login}\n              />\n              <UserInfo\n                user={user}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n};\n\nexport default UserList;","import React, { createContext, useReducer, useRef } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport './App.css';\nimport { getUsers, USERS_API_LIMIT, PER_PAGE }from './api';\nimport SearchBar from './components/SearchBar';\nimport UserList from './components/UserList';\n\n// Action types to be passed to our reducer\nexport const Actions = {\n  SetIsLoading: 0,\n  SetResults: 1,\n  FailedUserFetch: 2,\n  SetPage: 3,\n  RateLimitExceeded: 4\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case Actions.SetIsLoading:\n      return { ...state, isLoading: payload };\n    case Actions.FailedUserFetch:\n      return { ...state, error: true, isLoading: false, failedToLoadMsg: payload };\n    case Actions.SetResults:\n      return {\n        ...state,\n        isLoading: false,\n        users: payload.items,\n        total: payload.total_count,\n        pageCount: payload.pageCount,\n        currentPage: payload.currentPage\n      };\n    case Actions.RateLimitExceeded:\n      return { ...state, rateLimitExceeded: true };\n    default:\n      return state;\n  }\n};\n\n/**\n * Create a context so we can pass our `dispatch` function and our\n * `rateLimitExceeded` flag down to children without\n * having to pass it multiple levels through props\n */\nexport const AppContext = createContext(null);\n\n// Main component\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, {});\n  const { users, isLoading, total, currentPage, pageCount, failedToLoadMsg, rateLimitExceeded } = state;\n  const searchText = useRef('');\n  const exceededUsersLimit = total > USERS_API_LIMIT;\n\n  const goToPage = async (page) => {\n    dispatch({ type: Actions.SetIsLoading, payload: true });\n    try {\n      let payload = await getUsers(searchText.current, page);\n      dispatch({ type: Actions.SetResults, payload });\n    }\n    catch (e) {\n      dispatch({ type: Actions.FailedUserFetch, payload: e });\n    }\n  };\n\n  const onSearch = async (text) => {\n    // Save the search text so that we can send another request with it if we change pages later\n    searchText.current = text.replace(/\\s/g, '+');\n    goToPage(1);\n  };\n\n  const getResultHeadline = () => {\n    if (total === 1) {\n      return 'Found 1 User';\n    }\n\n    if (total <= PER_PAGE) {\n      return `Found ${total} Users`;\n    }\n\n    if (currentPage === 1) {\n      return `Showing First ${PER_PAGE} of ${exceededUsersLimit ? '1000+' : total} Found Users`;\n    }\n\n    if (!exceededUsersLimit && currentPage === pageCount) {\n      let startNum = total - users.length + 1;\n      return `Showing Users ${startNum} - ${total} of ${total} Found Users`;\n    }\n\n    return `Showing Users ${((currentPage - 1) * PER_PAGE) + 1} - ${currentPage * PER_PAGE} of ${exceededUsersLimit ? '1000+' : total} Found Users`;\n  };\n\n  return (\n    <AppContext.Provider value={{ dispatch, rateLimitExceeded }}>\n      <div className=\"App\">\n        <div className=\"fixed-top-row\">\n          <SearchBar\n            onSearch={onSearch}\n            loading={isLoading}\n          />\n          {\n            total !== undefined &&\n            <h3>{\n              total === 0 ?\n                'Sorry! No users found :('\n                :\n                getResultHeadline()\n            }</h3>\n          }\n        </div>\n        {\n          !!total &&\n          <UserList\n            total={exceededUsersLimit ? USERS_API_LIMIT : total}\n            exceededUsersLimit={exceededUsersLimit}\n            users={users}\n            currentPage={currentPage}\n            pageCount={pageCount}\n            goToPage={goToPage}\n          />\n        }\n        {\n          failedToLoadMsg &&\n          <h3 className=\"error-msg\">{failedToLoadMsg}</h3>\n        }\n        {\n          rateLimitExceeded &&\n          <h3 className=\"error-msg\">\n            API Rate limit has been exceeded. Only usernames and avatars will be shown for now.\n          </h3>\n        }\n        {\n          total > PER_PAGE &&\n          <ReactPaginate\n            activeClassName=\"current\"\n            activeLinkClassName=\"focused\"\n            containerClassName=\"paginated-nav\"\n            pageCount={pageCount}\n            pageRangeDisplayed={1}\n            marginPagesDisplayed={3}\n            onPageChange={({ selected }) => goToPage(selected + 1)}\n          />\n        }\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}